/*! For license information please see index.js.LICENSE.txt */
(()=>{"use strict";function t(t){var e=document.createElement("div");return e.innerHTML=t,e.firstElementChild}function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function r(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var o=function(){return e=function t(e){var n,o,i,a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,i=function(t){var e=t.target.closest(".carousel__button");if(e){var n=e.closest(".carousel__slide").dataset.id,r=new CustomEvent("product-add",{detail:n,bubbles:!0});a.elem.dispatchEvent(r)}var o=a.elem.querySelector(".carousel__inner"),i=o.firstElementChild.offsetWidth,c=o.children.length,s=(a.elem.querySelector(".carousel"),a.elem.querySelector(".carousel__arrow_left")),u=a.elem.querySelector(".carousel__arrow_right"),l=t.target.closest(".carousel__arrow");l&&(l.classList.contains("carousel__arrow_right")&&a.currentSlide<c?(a.currentPosition-=i,a.currentSlide++):l.classList.contains("carousel__arrow_left")&&a.currentSlide>1&&(a.currentPosition+=i,a.currentSlide--),o.style.transform="translateX(".concat(a.currentPosition,"px)"),s.style.display=1===a.currentSlide?"none":"",u.style.display=a.currentSlide===c?"none":"")},(o=r(o="onClick"))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i,this.slides=e,this.elem=this.render(),this.currentPosition=0,this.currentSlide=1},(o=[{key:"render",value:function(){var e=t('\n\t<div class="carousel">\n    \t\x3c!--Кнопки переключения--\x3e\n    \t<div class="carousel__arrow carousel__arrow_right">\n     \t <img src="../../assets/images/icons/angle-icon.svg" alt="icon">\n   \t </div>\n    \t<div class="carousel__arrow carousel__arrow_left">\n     \t <img src="../../assets/images/icons/angle-left-icon.svg" alt="icon">\n    \t</div>\n\n\t \t<div class="carousel__inner"></div>\n\t\t');return this.slides.map(function(t){var n=t.name,r=t.price,o=t.image,i=t.id;e.querySelector(".carousel__inner").insertAdjacentHTML("beforeend",'<div class="carousel__slide" data-id="'.concat(i,'">\n        <img src="../../assets/images/carousel/').concat(o,'" class="carousel__img" alt="slide">\n        <div class="carousel__caption">\n          <span class="carousel__price">€').concat(r.toFixed(2),'</span>\n          <div class="carousel__title">').concat(n,'</div>\n          <button type="button" class="carousel__button">\n            <img src="../../assets/images/icons/plus-icon.svg" alt="icon">\n          </button>\n        </div>\n      </div>'))}),e.querySelector(".carousel__arrow_left").style.display="none",e.addEventListener("click",this.onClick),e}}])&&n(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,o}();const i=[{name:"Penang shrimp",price:16,image:"penang_shrimp.png",id:"penang-shrimp"},{name:"Chicken cashew",price:14,image:"chicken_cashew.png",id:"chicken-cashew"},{name:"Red curry veggies",price:12.5,image:"red_curry_vega.png",id:"red-curry-veggies"},{name:"Chicken springrolls",price:6.5,image:"chicken_loempias.png",id:"chicken-springrolls"}];function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,l(r.key),r)}}function s(t,e,n){return e&&c(t.prototype,e),n&&c(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function u(t,e,n){return(e=l(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t){var e=function(t){if("object"!=a(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==a(e)?e:e+""}var d=s(function e(n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"render",function(){var e=t('\n\t\t<div class="ribbon">\n    <button class="ribbon__arrow ribbon__arrow_left">\n      <img src="../../assets/images/icons/angle-icon.svg" alt="icon">\n    </button>\n\n    <nav class="ribbon__inner">\n    </nav>\n\n    <button class="ribbon__arrow ribbon__arrow_right ribbon__arrow_visible">\n      <img src="../../assets/images/icons/angle-icon.svg" alt="icon">\n    </button>\n  </div>\n\t'),n=e.querySelector(".ribbon__inner");return r.categories.map(function(t){var e=t.id,r=t.name;n.insertAdjacentHTML("beforeend",'<a href="#" class="ribbon__item" data-id="'.concat(e,'">').concat(r,"</a>"))}),e.addEventListener("click",r.onClick),e}),u(this,"onClick",function(t){var e=t.target.closest(".ribbon__arrow"),n=t.target.closest(".ribbon__item");e?(t.preventDefault(),r.scrollRibbon(e)):n&&(t.preventDefault(),r.selectCategory(n))}),u(this,"scrollRibbon",function(t){t.classList.contains("ribbon__arrow_right")?r.ribbonInner.scrollBy(350,0):r.ribbonInner.scrollBy(-350,0),setTimeout(function(){return r.buttonUpdate()},100)}),u(this,"selectCategory",function(t){r.selectedCategory&&r.selectedCategory.classList.remove("ribbon__item_active"),r.selectedCategory=t,t.classList.add("ribbon__item_active"),r.elem.dispatchEvent(new CustomEvent("ribbon-select",{detail:t.dataset.id,bubbles:!0}))}),u(this,"buttonUpdate",function(){var t=r.ribbonInner.scrollLeft,e=r.ribbonInner.scrollWidth-t-r.ribbonInner.clientWidth,n=r.elem.querySelector(".ribbon__arrow_left"),o=r.elem.querySelector(".ribbon__arrow_right");t>0?n.classList.add("ribbon__arrow_visible"):n.classList.remove("ribbon__arrow_visible"),e>1?o.classList.add("ribbon__arrow_visible"):o.classList.remove("ribbon__arrow_visible")}),u(this,"initScroll",function(){r.ribbonInner.scrollLeft=0,r.ribbonInner.addEventListener("scroll",r.buttonUpdate),setTimeout(function(){return r.buttonUpdate()},50)}),this.categories=n,this.elem=this.render(),this.ribbonInner=this.elem.querySelector(".ribbon__inner"),this.initScroll(),this.selectedCategory=null});const f=[{id:"",name:"All"},{id:"salads",name:"Salads"},{id:"soups",name:"Soups"},{id:"chicken-dishes",name:"Chicken dishes"},{id:"beef-dishes",name:"Beef dishes"},{id:"seafood-dishes",name:"Seafood dishes"},{id:"vegetable-dishes",name:"Vegetable dishes"},{id:"bits-and-bites",name:"Bits and bites"},{id:"on-the-side",name:"On the side"}];function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,b(r.key),r)}}function v(t,e,n){return(e=b(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function b(t){var e=function(t){if("object"!=p(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==p(e)?e:e+""}var y=function(){return e=function e(n){var r=this,o=n.steps,i=n.value,a=void 0===i?0:i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),v(this,"render",function(){for(var e=t('\n\t\t <div class="slider">\n\n\t \x3c!--Ползунок слайдера с активным значением--\x3e\n\t <div class="slider__thumb" style="left: 50%;">\n\t\t<span class="slider__value">2</span>\n\t </div>\n\n\t \x3c!--Заполненная часть слайдера--\x3e\n\t <div class="slider__progress" style="width: 50%;"></div>\n\n\t \x3c!--Шаги слайдера--\x3e\n\t <div class="slider__steps"></div>\n  </div>\n\t\t'),n=e.querySelector(".slider__steps"),o=0;o<r.config.steps;o++)n.insertAdjacentHTML("beforeend","<span></span>");return e.addEventListener("click",r.onSliderClick),e.querySelector(".slider__thumb").addEventListener("pointerdown",r.onPointerDown),e}),v(this,"onPointerDown",function(t){t.preventDefault(),r.isDragging=!0,r.thumb.style.position="relative",r.thumb.style.zIndex=1e3,r.elem.classList.add("slider_dragging"),document.addEventListener("pointermove",r.onPointerMove),document.addEventListener("pointerup",r.onPointerUp)}),v(this,"onPointerMove",function(t){var e=(t.clientX-r.elem.getBoundingClientRect().left)/r.elem.offsetWidth;e<0&&(e=0),e>1&&(e=1);var n=100*e;r.thumb.style.left="".concat(n,"%"),r.progress.style.width="".concat(n,"%");var o=Math.round(e*(r.config.steps-1));if(o!==r.config.value){r.config.value=o,r.elem.querySelector(".slider__value").textContent=r.config.value;var i=r.stepsContainer.querySelectorAll("span");i.forEach(function(t){return t.classList.remove("slider__step-active")}),i[r.config.value].classList.add("slider__step-active")}}),v(this,"onPointerUp",function(){r.isDragging=!1,r.thumb.style.position="absolute",r.elem.classList.remove("slider_dragging"),document.removeEventListener("pointermove",r.onPointerMove),document.removeEventListener("pointerup",r.onPointerUp),r.sliderUpdate(),r.dispatchChangeEvent()}),v(this,"onSliderClick",function(t){if(!r.isDragging){var e=t.currentTarget,n=(t.clientX-e.getBoundingClientRect().left)/e.offsetWidth;n<0&&(n=0),n>1&&(n=1);var o=n*(r.config.steps-1);r.config.value=Math.round(o),r.config.value,r.sliderUpdate(),r.dispatchChangeEvent()}}),v(this,"sliderUpdate",function(t,e){var n=r.config.value/(r.config.steps-1)*100;r.thumb.style.left="".concat(n,"%"),r.progress.style.width="".concat(n,"%"),r.elem.querySelector(".slider__value").textContent=r.config.value;var o=r.stepsContainer.querySelectorAll("span");o.forEach(function(t){return t.classList.remove("slider__step-active")}),o[r.config.value].classList.add("slider__step-active")}),this.config={steps:o,value:a},this.elem=this.render(),this.thumb=this.elem.querySelector(".slider__thumb"),this.progress=this.elem.querySelector(".slider__progress"),this.stepsContainer=this.elem.querySelector(".slider__steps"),this.activeStepElement=null,this.sliderUpdate(),this.isDragging=!1},(n=[{key:"dispatchChangeEvent",value:function(){this.elem.dispatchEvent(new CustomEvent("slider-change",{detail:this.config.value,bubbles:!0}))}}])&&m(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,g(r.key),r)}}function g(t){var e=function(t){if("object"!=h(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==h(e)?e:e+""}var S=function(){return e=function t(e){var n,r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=function(t){if(t.target.closest(".card__button")){var e=new CustomEvent("product-add",{detail:i.product.id,bubbles:!0});i.elem.dispatchEvent(e)}},(r=g(r="onClick"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this.product=e,this.elem=this.render()},(n=[{key:"render",value:function(e){var n=t('<div class="card">\n    \t<div class="card__top">\n        <img src="../../assets/images/products/'.concat(this.product.image,'" class="card__image" alt="product">\n        <span class="card__price">€').concat(this.product.price.toFixed(2),'</span>\n    \t</div>\n    \t<div class="card__body">\n        <div class="card__title">').concat(this.product.name,'</div>\n        <button type="button" class="card__button">\n            <img src="../../assets/images/icons/plus-icon.svg" alt="icon">\n        </button>\n    \t</div>\n\t\t</div>'));return n.addEventListener("click",this.onClick),n}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,k(r.key),r)}}function E(t,e,n){return e&&P(t.prototype,e),n&&P(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function j(t,e,n){return(e=k(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function k(t){var e=function(t){if("object"!=w(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:e+""}var L=E(function e(n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),j(this,"render",function(e){var n=t('\n\t\t\t<div class="products-grid">\n \t\t\t\t <div class="products-grid__inner"></div>\n\t\t\t</div>\n\t\t');return r.productsGridInner=n.querySelector(".products-grid__inner"),r.renderProducts(e),n}),j(this,"renderProducts",function(t){for(var e in r.productsGridInner.innerHTML="",t)r.productsGridInner.insertAdjacentElement("beforeend",new S(t[e]).elem)}),j(this,"updateFilter",function(t){for(var e in t)r.filters.hasOwnProperty(e)&&(r.filters[e]=t[e]);r.refreshProducts()}),j(this,"refreshProducts",function(){var t=r.products.filter(function(t){return!(r.filters.noNuts&&t.nuts||r.filters.vegeterianOnly&&!t.vegeterian||r.filters.maxSpiciness<t.spiciness||r.filters.category&&t.category!==r.filters.category)});r.renderProducts(t)}),this.products=n,this.filters={},this.elem=this.render(this.products),this.filters={noNuts:!1,vegeterianOnly:!1,maxSpiciness:4,category:""}});function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,T(r.key),r)}}function T(t){var e=function(t){if("object"!=C(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==C(e)?e:e+""}var q=function(){return e=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.render(),this.addEventListeners(),this.initialTopCoord=null},(n=[{key:"render",value:function(){this.elem=t('<div class="cart-icon"></div>')}},{key:"update",value:function(t){var e=this;t.isEmpty()?this.elem.classList.remove("cart-icon_visible"):(this.elem.classList.add("cart-icon_visible"),this.elem.innerHTML='\n        <div class="cart-icon__inner">\n          <span class="cart-icon__count">'.concat(t.getTotalCount(),'</span>\n          <span class="cart-icon__price">€').concat(t.getTotalPrice().toFixed(2),"</span>\n        </div>"),this.updatePosition(),this.elem.classList.add("shake"),this.elem.addEventListener("transitionend",function(){e.elem.classList.remove("shake")},{once:!0}))}},{key:"addEventListeners",value:function(){var t=this;document.addEventListener("scroll",function(){return t.updatePosition()}),window.addEventListener("resize",function(){return t.updatePosition()})}},{key:"updatePosition",value:function(){if(this.elem.offsetWidth&&this.elem.offsetWidth)if(document.documentElement.clientWidth<=767&&Object.assign(this.elem.style,{position:"",top:"",left:"",zIndex:""}),this.initialTopCoord||(this.initialTopCoord=this.elem.getBoundingClientRect().top+window.pageYOffset),window.pageYOffset>this.initialTopCoord){var t=Math.min(document.querySelector(".container").getBoundingClientRect().right+20,document.documentElement.clientWidth-this.elem.offsetWidth-10)+"px";Object.assign(this.elem.style,{position:"fixed",top:"50px",zIndex:1e3,left:t})}else Object.assign(this.elem.style,{position:"",top:"",left:"",zIndex:""})}}])&&O(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,A(r.key),r)}}function M(t,e,n){return e&&x(t.prototype,e),n&&x(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function F(t,e,n){return(e=A(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function A(t){var e=function(t){if("object"!=I(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==I(e)?e:e+""}var G=M(function e(){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),F(this,"render",function(){var e=t('\n\t\t<div class="modal">\n      <div class="modal__overlay"></div>\n  \n      <div class="modal__inner">\n        <div class="modal__header">\n          <button type="button" class="modal__close">\n            <img src="../../assets/images/icons/cross-icon.svg" alt="close-icon" />\n          </button>\n\n\t\t\t<h3 class="modal__title"></h3>\n        </div>\n\n\t\t  <div class="modal__body"></div>\n\t\t');return e.querySelector(".modal__close").addEventListener("click",function(t){var e=t.target.closest(".modal__close");e&&e&&n.close()}),document.addEventListener("keydown",function(t){"Escape"===t.code&&n.close()}),e}),F(this,"setTitle",function(t){n.elem.querySelector(".modal__title").textContent=t}),F(this,"setBody",function(t){var e=n.elem.querySelector(".modal__body");e.textContent="",e.append(t)}),F(this,"close",function(){n.elem.remove(),n.body.classList.remove("is-modal-open")}),F(this,"open",function(){n.body.classList.add("is-modal-open"),n.body.append(n.elem)}),this.elem=this.render(),this.body=document.body});function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function U(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,H(r.key),r)}}function W(t,e,n){return(e=H(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function H(t){var e=function(t){if("object"!=B(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==B(e)?e:e+""}var N=function(){return e=function e(n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),W(this,"cartItems",[]),W(this,"onSubmit",function(e){e.preventDefault();var n=document.documentElement.querySelector("[type='submit']"),o=document.querySelector(".cart-form");n.classList.add("is-loading");var i=new FormData(o);fetch("https://httpbin.org/post",{method:"POST",body:i}).then(function(e){e.ok&&(r.modal.setTitle("Success!"),r.cartItems=[],r.modal.setBody(t('<div class="modal__body-inner">\n  \t\t\t\t<p>\n    \t\t\t\tOrder successful! Your order is being cooked :) <br>\n   \t\t\t\tWe’ll notify you about delivery time shortly.<br>\n    \t\t\t\t<img src="../../assets/images/delivery.gif">\n  \t\t\t\t</p>\n\t\t\t</div>')),r.cartIcon.update(r))})}),this.cartIcon=n,this.modal=null,this.addEventListeners()},(n=[{key:"addProduct",value:function(t){if(t){var e=this.cartItems.find(function(e){return e.product==t});e?e.count++:(e={product:t,count:1},this.cartItems.push(e)),this.onProductUpdate(e)}}},{key:"updateProductCount",value:function(t,e){var n=this.cartItems.findIndex(function(e){return e.product.id==t});if(-1!==n){var r=this.cartItems[n];r.count+=e,0==r.count&&this.cartItems.splice(n,1),this.onProductUpdate(r)}}},{key:"isEmpty",value:function(){return!(this.cartItems.length>0)&&(0===this.cartItems.length||void 0)}},{key:"getTotalCount",value:function(){var t=0;return this.cartItems.forEach(function(e){t+=e.count}),t}},{key:"getTotalPrice",value:function(){var t=0;return this.cartItems.forEach(function(e){t+=e.product.price*e.count}),t}},{key:"renderProduct",value:function(e,n){return t('\n    <div class="cart-product" data-product-id="'.concat(e.id,'">\n      <div class="cart-product__img">\n        <img src="../../assets/images/products/').concat(e.image,'" alt="product">\n      </div>\n      <div class="cart-product__info">\n        <div class="cart-product__title">').concat((r=e.name,Array.from(r).map(function(t){switch(t){case"&":return"&amp;";case'"':return"&quot;";case"'":return"&#39;";case"<":return"&lt;";case">":return"&gt;";default:return t}}).join("")),'</div>\n        <div class="cart-product__price-wrap">\n          <div class="cart-counter">\n            <button type="button" class="cart-counter__button cart-counter__button_minus">\n              <img src="../../assets/images/icons/square-minus-icon.svg" alt="minus">\n            </button>\n            <span class="cart-counter__count">').concat(n,'</span>\n            <button type="button" class="cart-counter__button cart-counter__button_plus">\n              <img src="../../assets/images/icons/square-plus-icon.svg" alt="plus">\n            </button>\n          </div>\n          <div class="cart-product__price">€').concat(e.price.toFixed(2),"</div>\n        </div>\n      </div>\n    </div>"));var r}},{key:"renderOrderForm",value:function(){return t('<form class="cart-form">\n      <h5 class="cart-form__title">Delivery</h5>\n      <div class="cart-form__group cart-form__group_row">\n        <input name="name" type="text" class="cart-form__input" placeholder="Name" required value="Santa Claus">\n        <input name="email" type="email" class="cart-form__input" placeholder="Email" required value="john@gmail.com">\n        <input name="tel" type="tel" class="cart-form__input" placeholder="Phone" required value="+1234567">\n      </div>\n      <div class="cart-form__group">\n        <input name="address" type="text" class="cart-form__input" placeholder="Address" required value="North, Lapland, Snow Home">\n      </div>\n      <div class="cart-buttons">\n        <div class="cart-buttons__buttons btn-group">\n          <div class="cart-buttons__info">\n            <span class="cart-buttons__info-text">total</span>\n            <span class="cart-buttons__info-price">€'.concat(this.getTotalPrice().toFixed(2),'</span>\n          </div>\n          <button type="submit" class="cart-buttons__button btn-group__button button">order</button>\n        </div>\n      </div>\n    </form>'))}},{key:"renderModal",value:function(){var e=this;this.modal=new G,this.modal.setTitle("Your order");var n,r=t("<div></div>"),o=function(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return U(t,e);var n={}.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){c=!0,i=t},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}(this.cartItems);try{for(o.s();!(n=o.n()).done;){var i=n.value;r.insertAdjacentElement("beforeend",this.renderProduct(i.product,i.count))}}catch(t){o.e(t)}finally{o.f()}r.insertAdjacentElement("beforeend",this.renderOrderForm()),this.modal.setBody(r),this.modal.open(),r.querySelector(".cart-form").addEventListener("submit",this.onSubmit),r.addEventListener("click",function(t){var n=t.target.closest(".cart-counter__button");if(n){var r=t.target.closest(".cart-product").dataset.productId;n.classList.contains("cart-counter__button_minus")?e.updateProductCount(r,-1):n.classList.contains("cart-counter__button_plus")&&e.updateProductCount(r,1)}})}},{key:"onProductUpdate",value:function(t){if(document.body.classList.contains("is-modal-open")){var e=t.product.id,n=document.documentElement.querySelector(".modal__body"),r=n.querySelector("[data-product-id='".concat(e,"'] .cart-counter__count")),o=n.querySelector("[data-product-id='".concat(e,"'] .cart-product__price")),i=n.querySelector(".cart-buttons__info-price");0==t.count&&n.querySelector("[data-product-id='".concat(e,"']")).remove(),r.innerHTML=t.count,o.innerHTML="€".concat((t.product.price*t.count).toFixed(2)),i.innerHTML="€".concat(this.getTotalPrice().toFixed(2)),0==this.cartItems.length&&this.modal.close()}this.cartIcon.update(this)}},{key:"addEventListeners",value:function(){var t=this;this.cartIcon.elem.onclick=function(){return t.renderModal()}}}])&&D(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function z(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var s=r&&r.prototype instanceof c?r:c,u=Object.create(s.prototype);return Y(u,"_invoke",function(n,r,o){var i,c,s,u=0,l=o||[],d=!1,f={p:0,n:0,v:t,a:p,f:p.bind(t,4),d:function(e,n){return i=e,c=0,s=t,f.n=n,a}};function p(n,r){for(c=n,s=r,e=0;!d&&u&&!o&&e<l.length;e++){var o,i=l[e],p=f.p,m=i[2];n>3?(o=m===r)&&(s=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=p&&((o=n<2&&p<i[1])?(c=0,f.v=r,f.n=i[1]):p<m&&(o=n<3||i[0]>r||r>m)&&(i[4]=n,i[5]=r,f.n=m,c=0))}if(o||n>1)return a;throw d=!0,r}return function(o,l,m){if(u>1)throw TypeError("Generator is already running");for(d&&1===l&&p(l,m),c=l,s=m;(e=c<2?t:s)||!d;){i||(c?c<3?(c>1&&(f.n=-1),p(c,s)):f.n=s:f.v=s);try{if(u=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,s)))throw TypeError("iterator result is not an object");if(!e.done)return e;s=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(s=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(d=f.n<0)?s:n.call(r,f))!==a)break}catch(e){i=t,c=1,s=e}finally{u=1}}return{value:e,done:d}}}(n,o,i),!0),u}var a={};function c(){}function s(){}function u(){}e=Object.getPrototypeOf;var l=[][r]?e(e([][r]())):(Y(e={},r,function(){return this}),e),d=u.prototype=c.prototype=Object.create(l);function f(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,u):(t.__proto__=u,Y(t,o,"GeneratorFunction")),t.prototype=Object.create(d),t}return s.prototype=u,Y(d,"constructor",u),Y(u,"constructor",s),s.displayName="GeneratorFunction",Y(u,o,"GeneratorFunction"),Y(d),Y(d,o,"Generator"),Y(d,r,function(){return this}),Y(d,"toString",function(){return"[object Generator]"}),(z=function(){return{w:i,m:f}})()}function Y(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}Y=function(t,e,n,r){function i(e,n){Y(t,e,function(t){return this._invoke(e,n,t)})}e?o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n:(i("next",0),i("throw",1),i("return",2))},Y(t,e,n,r)}function X(t,e,n,r,o,i,a){try{var c=t[i](a),s=c.value}catch(t){return void n(t)}c.done?e(s):Promise.resolve(s).then(r,o)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,$(r.key),r)}}function $(t){var e=function(t){if("object"!=R(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==R(e)?e:e+""}(new(function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.carousel,this.ribbonMenu,this.stepSlider,this.cartIcon,this.cart,this.productsGrid,this.products,this.addEventListener()},e=[{key:"render",value:(n=z().m(function t(){var e;return z().w(function(t){for(;;)switch(t.n){case 0:return this.carousel=new o(i),document.querySelector("[data-carousel-holder]").append(this.carousel.elem),this.ribbonMenu=new d(f),document.querySelector("[data-ribbon-holder]").append(this.ribbonMenu.elem),this.stepSlider=new y({steps:5,value:3}),document.querySelector("[data-slider-holder]").append(this.stepSlider.elem),this.cartIcon=new q,document.querySelector("[data-cart-icon-holder]").append(this.cartIcon.elem),this.cart=new N(this.cartIcon),t.n=1,fetch("products.json");case 1:return e=t.v,t.n=2,e.json();case 2:this.products=t.v,this.productsGrid=new L(this.products),document.querySelector("[data-products-grid-holder]").append(this.productsGrid.elem),this.productsGrid.updateFilter({noNuts:document.getElementById("nuts-checkbox").checked,vegeterianOnly:document.getElementById("vegeterian-checkbox").checked,maxSpiciness:this.stepSlider.value,category:this.ribbonMenu.value});case 3:return t.a(2)}},t,this)}),r=function(){var t=this,e=arguments;return new Promise(function(r,o){var i=n.apply(t,e);function a(t){X(i,r,o,a,c,"next",t)}function c(t){X(i,r,o,a,c,"throw",t)}a(void 0)})},function(){return r.apply(this,arguments)})},{key:"addEventListener",value:function(){var t=this;document.body.addEventListener("product-add",function(e){e.target.closest(".card-product");var n=e.detail,r=t.products.find(function(t){return t.id===n});t.cart.addProduct(r)}),document.querySelector("[data-slider-holder]").addEventListener("slider-change",function(e){t.productsGrid.updateFilter({maxSpiciness:e.detail})}),document.querySelector("[data-ribbon-holder]").addEventListener("ribbon-select",function(e){t.productsGrid.updateFilter({category:e.detail})}),document.getElementById("nuts-checkbox").addEventListener("change",function(e){t.productsGrid.updateFilter({noNuts:e.target.checked})}),document.getElementById("vegeterian-checkbox").addEventListener("change",function(e){t.productsGrid.updateFilter({vegeterianOnly:e.target.checked})})}}],e&&V(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e,n,r}())).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,